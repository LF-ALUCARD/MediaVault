üßæ Resumo Geral do Projeto e Caminho T√©cnico

O desafio prop√µe a cria√ß√£o de um sistema com banco de dados (B.D.) e Web Service (WS) capaz de gravar, armazenar e recuperar arquivos de √°udio e v√≠deo, com limite de validade de 180 dias e controle de acesso por usu√°rio e senha.

üß† Objetivo Principal

Desenvolver um sistema que:

Permita gravar √°udio e v√≠deo;

Armazene esses arquivos em um servidor (via Web Service);

Tenha registro e controle em um banco de dados (MySQL);

Permita recuperar (baixar) arquivos somente dentro do prazo de 180 dias;

Bloqueie downloads ap√≥s o prazo expirar, informando o motivo;

Exija autentica√ß√£o (usu√°rio e senha) para acessar e baixar arquivos.

üß± Como o Sistema Funciona (Arquitetura Geral)

O sistema √© dividido em tr√™s grandes partes:

1Ô∏è‚É£ Banco de Dados (MySQL)

O banco n√£o armazena o arquivo de √°udio/v√≠deo em si, mas sim os metadados do arquivo ‚Äî ou seja, as informa√ß√µes que identificam e controlam ele.
Cada registro representa um arquivo, contendo:

Nome do arquivo

Tipo (audio ou video)

Caminho no servidor ou Web Service

Data do upload

Data de expira√ß√£o (upload + 180 dias)

Usu√°rio que fez o upload

üëâ Assim, o banco serve como controle administrativo e de validade, enquanto o arquivo real fica guardado no servidor.

2Ô∏è‚É£ Web Service (WS)

O Web Service √© o componente respons√°vel por receber e armazenar os arquivos reais.
Ele funciona por meio de uma API HTTP, com endpoints como:

POST /upload ‚Üí recebe o arquivo e salva no servidor;

GET /download/{id} ‚Üí entrega o arquivo ao usu√°rio autorizado, se ainda estiver dentro do prazo;

DELETE /expirados ‚Üí (opcional) remove arquivos que j√° passaram dos 180 dias.

Fluxo de upload:

O usu√°rio envia um arquivo via POST (formul√°rio ou requisi√ß√£o HTTP).

O WS salva o arquivo em uma pasta ou servi√ßo de armazenamento (ex: /media/uploads/).

O WS retorna uma URL p√∫blica ou interna para acessar o arquivo.

O sistema principal grava essa URL no banco de dados junto com as informa√ß√µes do arquivo.

Fluxo de download:

O sistema checa se o arquivo existe e se ainda est√° dentro dos 180 dias.

Se estiver v√°lido:

Compacta o arquivo (.zip);

Mostra mensagem de confirma√ß√£o com local de download.

Se estiver expirado:

Mostra mensagem explicando que o prazo expirou e o arquivo n√£o pode ser baixado.

3Ô∏è‚É£ Aplica√ß√£o (Java + Spring Boot)

A aplica√ß√£o √© o n√∫cleo de regras de neg√≥cio e faz a ponte entre o banco e o Web Service.
Ela ser√° constru√≠da em Java com o framework Spring Boot, usando:

Spring Web ‚Üí para criar as APIs REST;

Spring Data JPA ‚Üí para integrar com o MySQL;

Spring Security ‚Üí para autentica√ß√£o e controle de usu√°rios;

Possivelmente Scheduled Tasks ‚Üí para excluir automaticamente arquivos vencidos.

üß© Modelo de Dom√≠nio

As principais entidades (tabelas) s√£o:

üßç Usuario

id

nome

email

senha

üîê Permissao

id

nome (ex: ROLE_USER, ROLE_ADMIN)

üìÅ Arquivo

id

nome_arquivo

tipo (audio ou video)

caminho_ws (URL do arquivo no servidor)

data_upload

data_expiracao

usuario_id (chave estrangeira para o usu√°rio)

‚öôÔ∏è Relacionamentos:

Um Usu√°rio pode ter v√°rios Arquivos (1:N).

Um Usu√°rio pode ter v√°rias Permiss√µes (N:N).

Cada Arquivo pertence a um √∫nico Usu√°rio.

üßÆ Regras de Neg√≥cio Principais
Regra	Descri√ß√£o
Tempo de validade	Cada arquivo tem 180 dias a partir da data de upload.
Verifica√ß√£o antes do download	O sistema s√≥ libera o download se a data atual for menor que a data de expira√ß√£o.
Mensagens ao usu√°rio	Mostra se o arquivo est√° dentro ou fora do prazo, e o motivo.
Controle de acesso	Somente usu√°rios autenticados (login e senha) podem fazer upload e download.
Compacta√ß√£o	Antes do download, o arquivo pode ser enviado como .zip.
Limpeza autom√°tica (opcional)	Um agendador pode apagar ou desativar arquivos expirados.
üåç Resumo do Fluxo Completo
Usu√°rio faz login
       ‚Üì
Faz upload de √°udio/v√≠deo (via WS)
       ‚Üì
WS salva o arquivo no servidor
       ‚Üì
Sistema grava metadados no MySQL (nome, tipo, data, caminho, expira√ß√£o, usu√°rio)
       ‚Üì
Usu√°rio solicita download
       ‚Üì
Sistema verifica se o arquivo ainda √© v√°lido
       ‚Üì
‚úÖ Dentro do prazo ‚Üí baixa arquivo compactado (.zip)
‚ùå Fora do prazo ‚Üí exibe mensagem de bloqueio

üí° Decis√µes T√©cnicas que j√° definimos
Item	Tecnologia / Solu√ß√£o
Linguagem	Java
Framework	Spring Boot
Banco de Dados	MySQL
ORM	Spring Data JPA / Hibernate
Seguran√ßa	Spring Security (usu√°rio e senha)
Web Service	REST API (upload/download)
Armazenamento	Servidor de arquivos (local ou nuvem)
Tempo de expira√ß√£o	180 dias
Compress√£o	.zip antes do download
Expira√ß√£o autom√°tica (opcional)	Spring Scheduler
üß≠ Resumo final do que j√° est√° claro

O banco de dados n√£o guarda o v√≠deo/√°udio, apenas as informa√ß√µes sobre eles;

O Web Service √© quem armazena fisicamente os arquivos (em disco ou nuvem);

O Spring Boot gerencia a l√≥gica de upload, download, autentica√ß√£o e expira√ß√£o;

O sistema verifica automaticamente se o arquivo ainda √© v√°lido antes de liberar o download;

Somente usu√°rios com permiss√£o podem acessar, baixar ou remover arquivos;

Toda a arquitetura foi pensada para ser modular, segura e escal√°vel.
